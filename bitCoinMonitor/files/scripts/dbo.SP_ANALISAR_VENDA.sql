CREATE PROCEDURE SP_ANALISAR_VENDA (@IDT_CONSULTA INT) 
AS
 BEGIN

	DECLARE @MRC_OPERAR CHAR(1)	
	DECLARE @VLR_VENDA DECIMAL(18,5)
	DECLARE @VLR_COMPRA DECIMAL(18,5)
	DECLARE @VLR_MAXIMO DECIMAL(18,5)
	DECLARE @VLR_INVESTIDO DECIMAL (18,5)
	DECLARE @VLR_LIMITE_COMPRA DECIMAL(18,5)
	DECLARE @QTD_COMPRADA DECIMAL(18,5)
	DECLARE @VLR_VENDA_SIMULADO DECIMAL(18,5)
	DECLARE @PCT_TAXA DECIMAL(18,5)
	DECLARE @PCT_TAXA_COMPRA DECIMAL(18,5)
	DECLARE @VLR_LIMITE DECIMAL(18,5)
	DECLARE @VLR_MAX_COMPRA DECIMAL(18,5)
	DECLARE @VLR_MIN_VENDA DECIMAL(18,5)
	DECLARE @PCT_RENTABILIDADE DECIMAL(18,5)
	DECLARE @PCT_RENTABILIDADE_MIN DECIMAL(18,5)
	DECLARE @VLR_VENDA_NA_COMPRA DECIMAL(18,5)
	DECLARE @VLR_LIMITE_PREJUIZO DECIMAL(18,5)
	DECLARE @VLR_LIMITE_PREJUIZO_AGUARDA DECIMAL(18,5)
	DECLARE @IDT_ORDEM_COMPRA INT
	DECLARE @MRC_AGUARDAR CHAR(1)
	DECLARE @FLAG VARCHAR(10)
	
	SET @VLR_LIMITE = NULL
	SET @VLR_LIMITE_PREJUIZO = 500
	SET @FLAG = 'OPERAR'

	--//Pegando parametrizações
	SELECT	@PCT_TAXA = pct_taxa_venda,
			@PCT_TAXA_COMPRA  = pct_taxa_compra
	FROM	TB_PARAMETROS
	

	--//Pegando dados da compra
	SELECT	@IDT_ORDEM_COMPRA = IDT_ORDEM,
			@VLR_LIMITE_COMPRA = VLR_LIMITE,
			@QTD_COMPRADA = QTD_MOEDA,
			@VLR_VENDA_NA_COMPRA = VLR_VENDA,
			@MRC_AGUARDAR = MRC_AGUARDAR,
			@PCT_RENTABILIDADE_MIN = ((CON.VLR_MAXIMO - CON.VLR_MINIMO)/CON.VLR_MAXIMO)/5
	FROM	TB_MINHAS_ORDENS ORD INNER JOIN 
			(
				SELECT	MAX(DAT_CRIACAO) MAX_DATA
				FROM	TB_MINHAS_ORDENS
			) MAX_ORDENS
				ON(MAX_ORDENS.MAX_DATA = ORD.DAT_CRIACAO)
	JOIN	TB_CONSULTA CON
				ON(CON.IDT_CONSULTA = ORD.IDT_CONSULTA_ORIGEM)
	WHERE	ORD.IDT_TIPO_ORDEM = 'C'
	AND		ORD.IDT_STATUS = 4 --//FINALIZADA


	--//Pegando dados da consulta analisada
	SELECT	@VLR_VENDA = vlr_venda,
			@VLR_COMPRA = vlr_compra,
			@VLR_MAXIMO = vlr_maximo
	FROM	TB_CONSULTA
	WHERE	idt_consulta = @IDT_CONSULTA


	--//Se a compra estiver com maca de AGUARDAR significa que a venda só deve ativada novamente quando Compra ou Venda atingir seu valor máximo (a marca de aguardar é definida na SP de compra)
	IF( @MRC_AGUARDAR = 'S')
	 BEGIN
		
		IF(@VLR_LIMITE_COMPRA - @VLR_VENDA > 2000 OR ((@VLR_VENDA = @VLR_MAXIMO OR @VLR_COMPRA = @VLR_MAXIMO) AND @VLR_VENDA > @VLR_LIMITE_COMPRA))
		 BEGIN
			--//Se tiver atingido o máximo, retira a marca de aguardar da compra
			UPDATE	TB_MINHAS_ORDENS
			SET		MRC_AGUARDAR = 'N'
			WHERE	IDT_ORDEM = @IDT_ORDEM_COMPRA
		 END		
		ELSE
		 SET @FLAG = 'AGUARDAR'
		
	 END

	IF( @FLAG = 'OPERAR' ) 
	 BEGIN

 		--Pegando a cotação mais cara de compra
		SELECT	@VLR_MAX_COMPRA = MAX(VLR_PRECO_LIMITE)
		FROM	TB_LIVRO_ORDENS
		WHERE	IDT_CONSULTA = @IDT_CONSULTA
		AND		COD_TIPO_ORDEM = 'C'
		
		--//Pegando a cotação mais barata de venda
		SELECT	@VLR_MIN_VENDA = MIN(VLR_PRECO_LIMITE)
		FROM	TB_LIVRO_ORDENS
		WHERE	IDT_CONSULTA = @IDT_CONSULTA
		AND		COD_TIPO_ORDEM = 'V'	


		--//Em situação de queda, vendemos para não ter um prejuízo maior
		IF(@VLR_VENDA_NA_COMPRA - @VLR_VENDA > @VLR_LIMITE_PREJUIZO ) 
		 BEGIN
			SET @MRC_OPERAR = 'S'
			SET @VLR_LIMITE = @VLR_MAX_COMPRA + 0.01
		 END
		ELSE
		 BEGIN	
	
			SELECT	@MRC_OPERAR = CASE WHEN (	E.TENDENCIA_MAX_VENDA = 'DESCENDO' AND
												E.TENDENCIA_MEDIA_VENDA = 'DESCENDO' AND
												E.QTD_VENDA_LIVRO >  E.QTD_COMPRA_LIVRO 
												) THEN 'S' ELSE 'N' END 
			FROM	VW_ESTATISTICAS_FINAL E 
			WHERE	E.IDT_CONSULTA = @IDT_CONSULTA

	
			IF( @MRC_OPERAR = 'S' )
			 BEGIN	

				IF(@PCT_RENTABILIDADE_MIN < (@PCT_TAXA+@PCT_TAXA_COMPRA))
					SET @PCT_RENTABILIDADE_MIN = (@PCT_TAXA+@PCT_TAXA_COMPRA)


				--//Calculando o valor que foi investido na compra
				SET @VLR_INVESTIDO = (@QTD_COMPRADA * @VLR_LIMITE_COMPRA)
			
				--//Calculando o valor limite para a venda
				IF( @VLR_MIN_VENDA = @VLR_MAX_COMPRA )
					SET @VLR_LIMITE = @VLR_MIN_VENDA - 0.01
				ELSE
					SET @VLR_LIMITE = @VLR_MAX_COMPRA + 0.01

				--//Simulando compra para saber rentabilidade
				SET @VLR_VENDA_SIMULADO = (@QTD_COMPRADA*@VLR_LIMITE) - (@QTD_COMPRADA*@VLR_LIMITE*@PCT_TAXA)
				SET @PCT_RENTABILIDADE = @VLR_VENDA_SIMULADO/@VLR_INVESTIDO-1

				--//Se a rentabilidade for maior que o mínimo parametrizado, sugere a operação
				IF(@PCT_RENTABILIDADE >= @PCT_RENTABILIDADE_MIN)
					SET @MRC_OPERAR = 'S'
				ELSE
				 BEGIN
					SET @MRC_OPERAR = 'N'
					SET @VLR_LIMITE = NULL
				 END
			END
		END
	 END

	SELECT	ISNULL(@MRC_OPERAR,'N') MRC_OPERAR,
			ISNULL(@VLR_LIMITE,0) VLR_LIMITE,
			'N' MRC_AGUARDAR 

 END